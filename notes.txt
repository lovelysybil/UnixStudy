1. man命令 查询需要包含的头文件，及用法

2. find用法 http://www.cnblogs.com/wanqieddy/archive/2011/06/09/2076785.html
Linux中find常见用法示例
·find   path   -option   [   -print ]   [ -exec   -ok   command ]   {} \;

find命令的参数；

pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。
-print： find命令将匹配的文件输出到标准输出。
-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为'command' { } \;，注意{ }和\；之间的空格。
-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。
#-print 将查找到的文件输出到标准输出
#-exec   command   {} \;      —–将查到的文件执行command操作,{} 和 \;之间有空格
#-ok 和-exec相同，只不过在操作前要询用户
例：find . -name .svn | xargs rm -rf

====================================================

-name   filename             #查找名为filename的文件
-perm                        #按执行权限来查找
-user    username             #按文件属主来查找
-group groupname            #按组来查找
-mtime   -n +n                #按文件更改时间来查找文件，-n指n天以内，+n指n天以前
-atime    -n +n               #按文件访问时间来查GIN: 0px">

-ctime    -n +n              #按文件创建时间来查找文件，-n指n天以内，+n指n天以前
-nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在
-nouser                     #查无有效属主的文件，即文件的属主在/etc/passwd中不存
-newer   f1 !f2              找文件，-n指n天以内，+n指n天以前 
-ctime    -n +n               #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 
-nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在
-nouser                      #查无有效属主的文件，即文件的属主在/etc/passwd中不存
-newer   f1 !f2               #查更改时间比f1新但比f2旧的文件
-type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件
-size      n[c]               #查长度为n块[或n字节]的文件
-depth                       #使查找在进入子目录前先行查找完本目录
-fstype                     #查更改时间比f1新但比f2旧的文件
-type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件
-size      n[c]               #查长度为n块[或n字节]的文件
-depth                       #使查找在进入子目录前先行查找完本目录
-fstype                      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到
-mount                       #查文件时不跨越文件系统mount点
-follow                      #如果遇到符号链接文件，就跟踪链接所指的文件
-cpio                %;      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到
-mount                       #查文件时不跨越文件系统mount点
-follow                      #如果遇到符号链接文件，就跟踪链接所指的文件
-cpio                        #对匹配的文件使用cpio命令，将他们备份到磁带设备中
-prune                       #忽略某个目录

=====================================================
$find   ~   -name   "*.txt"   -print    #在$HOME中查.txt文件并显示
$find   .    -name   "*.txt"   -print
$find   .    -name   "[A-Z]*"   -print   #查以大写字母开头的文件
$find   /etc   -name   "host*"   -print #查以host开头的文件
$find   .   -name   "[a-z][a-z][0–9][0–9].txt"    -print   #查以两个小写字母和两个数字开头的txt文件
$find .   -perm   755   -print
$find   .   -perm -007   -exec ls -l {} \;   #查所有用户都可读写执行的文件同-perm 777
$find   . -type d   -print
$find   .   !   -type   d   -print 
$find   .   -type l   -print

$find   .   -size   +1000000c   -print        #查长度大于1Mb的文件
$find   .   -size   100c         -print       # 查长度为100c的文件
$find   .   -size   +10   -print              #查长度超过期作废10块的文件（1块=512字节）

$cd /
$find   etc   home   apps    -depth   -print   | cpio   -ivcdC65536   -o   /dev/rmt0
$find   /etc -name "passwd*"   -exec grep   "cnscn"   {}   \;   #看是否存在cnscn用户
$find . -name "yao*"   | xargs file
$find   . -name "yao*"   |   xargs   echo    "" > /tmp/core.log
$find   . -name "yao*"   | xargs   chmod   o-w

======================================================

find   -name april*                     在当前目录下查找以april开始的文件
find   -name   april*   fprint file        在当前目录下查找以april开始的文件，并把结果输出到file中
find   -name ap* -o -name may*   查找以ap或may开头的文件
find   /mnt   -name tom.txt   -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件
find   /mnt   -name t.txt ! -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件
find   /tmp   -name wa* -type l            在/tmp下查找名为wa开头且类型为符号链接的文件
find   /home   -mtime   -2                 在/home下查最近两天内改动过的文件
find /home    -atime -1                  查1天之内被存取过的文件
find /home -mmin    +60                  在/home下查60分钟前改动过的文件
find /home   -amin   +30                  查最近30分钟前被存取过的文件
find /home   -newer   tmp.txt             在/home下查更新时间比tmp.txt近的文件或目录
find /home   -anewer   tmp.txt            在/home下查存取时间比tmp.txt近的文件或目录
find   /home   -used   -2                  列出文件或目录被改动过之后，在2日内被存取过的文件或目录
find   /home   -user cnscn                列出/home目录内属于用户cnscn的文件或目录
find   /home   -uid   +501                  列出/home目录内用户的识别码大于501的文件或目录
find   /home   -group   cnscn              列出/home内组为cnscn的文件或目录
find   /home   -gid 501                   列出/home内组id为501的文件或目录
find   /home   -nouser                    列出/home内不属于本地用户的文件或目录
find   /home   -nogroup                   列出/home内不属于本地组的文件或目录
find   /home    -name tmp.txt    -maxdepth   4   列出/home内的tmp.txt 查时深度最多为3层
find   /home   -name tmp.txt   -mindepth   3   从第2层开始查
find   /home   -empty                     查找大小为0的文件或空目录
find   /home   -size   +512k                查大于512k的文件
find   /home   -size   -512k               查小于512k的文件
find   /home   -links   +2                查硬连接数大于2的文件或目录
find   /home   -perm   0700                查权限为700的文件或目录
find   /tmp   -name tmp.txt   -exec cat {} \;
find   /tmp   -name   tmp.txt   -ok   rm {} \;

find    /   -amin    -10     # 查找在系统中最后10分钟访问的文件
find    /   -atime   -2        # 查找在系统中最后48小时访问的文件
find    /   -empty             # 查找在系统中为空的文件或者文件夹
find    /   -group   cat        # 查找在系统中属于 groupcat的文件
find    /   -mmin   -5         # 查找在系统中最后5分钟里修改过的文件
find    /   -mtime   -1       #查找在系统中最后24小时里修改过的文件
find    /   -nouser           #查找在系统中属于作废用户的文件
find    /   -user    fred     #查找在系统中属于FRED这个用户的文件
查当前目录下的所有普通文件
# find . -type f -exec ls -l {} \; 
-rw-r–r–    1 root      root         34928 2003-02-25   ./conf/httpd.conf 
-rw-r–r–    1 root      root         12959 2003-02-25   ./conf/magic 
-rw-r–r–    1 root      root          180 2003-02-25   ./conf.d/README 
查当前目录下的所有普通文件，并在- e x e c选项中使用ls -l命令将它们列出

=================================================
在/ l o g s目录中查找更改时间在5日以前的文件并删除它们：
$ find logs -type f -mtime +5 -exec   -ok   rm {} \;

=================================================
查询当天修改过的文件
[root@book class]# find   ./   -mtime   -1   -type f   -exec   ls -l   {} \;

=================================================
查询文件并询问是否要显示
[root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \;  
< ls … ./classDB.inc.php > ? y
-rw-r–r–    1 cnscn    cnscn       13709   1月 12 12:22 ./classDB.inc.php
[root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \;  
< ls … ./classDB.inc.php > ? n
[root@book class]#

=================================================
查询并交给awk去处理
[root@book class]# who   |   awk   ’{print $1"\t"$2}’
cnscn    pts/0

=================================================
awk—grep—sed

[root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’ |   sed   s"/\/dev\///g"
文件系统
sda2
sda1
[root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’
文件系统
/dev/sda2
/dev/sda1
1)在/tmp中查找所有的*.h，并在这些文件中查找“SYSCALL_VECTOR"，最后打印出所有包含"SYSCALL_VECTOR"的文件名

A) find   /tmp   -name   "*.h"   | xargs   -n50   grep SYSCALL_VECTOR
B) grep   SYSCALL_VECTOR   /tmp/*.h | cut    -d’:'   -f1| uniq > filename
                                 C) find   /tmp   -name "*.h"   -exec grep "SYSCALL_VECTOR"   {}   \; -print

                                 2)find / -name filename -exec rm -rf {} \;
                                     find / -name filename -ok rm -rf {} \;

                                     3)比如要查找磁盘中大于3M的文件：
                                     find . -size +3000k -exec ls -ld {} ;

                                     4)将find出来的东西拷到另一个地方
                                     find *.c -exec cp ‘{}’ /tmp ‘;’

                                     如果有特殊文件，可以用cpio，也可以用这样的语法：
                                     find dir -name filename -print | cpio -pdv newdir

                                     6)查找2004-11-30 16:36:37时更改过的文件
# A=`find ./ -name "*php"` |   ls -l –full-time $A 2>/dev/null | grep "2004-11-30 16:36:37"

3. cut用法
cut命令类似于awk，从行里面抽取信息，是一个功能弱化版的awk。
cut命令格式为：cut [options] filename
其中options有：
-d  指定与空格和t a b键不同的域分隔符。类似于awk的“-F”。
-f field  指定剪切域数
-c list  指定剪切字符数。

首先我们来处理按:分割的password文件：
    # cat passwd  
    root:x:0:0:root:/root:/bin/sh  
    proxy:x:13:13:proxy:/bin:/bin/sh  
    operator:x:37:37:Operator:/var:/bin/sh  
    ftp:x:83:83:ftp:/home/ftp:/bin/sh  
    nobody:x:99:99:nobody:/home:/bin/sh  
    sshd:x:103:99:Operator:/var:/bin/sh  

按:分割，然后取第一列和第六列，-f可以指定获取的域数：
    # cut -d: -f1,6 passwd  
    root:/root  
    proxy:/bin  
    operator:/var  
    ftp:/home/ftp  
    nobody:/home  
    sshd:/var  

指定域数还可以这样写：
    # cut -d: -f 1-4,6 passwd  
    root:x:0:0:/root  
    proxy:x:13:13:/bin  
    operator:x:37:37:/var  
    ftp:x:83:83:/home/ftp  
    nobody:x:99:99:/home  
    sshd:x:103:99:/var 

4. grep用法
Linux系统中有很多文件，比如配置文件、日志文件、用户文件等。文件中都包含了大量的信息，我们可以使用cat等命令轻松将其输出到屏幕，但如果要从文件中分析或提取数据，还需要其他工具来实现。而linux正好提供了这些工具：grep、awk、sed等。把这些工具使用好，可以极大地提高你的工作效率，对系统管理员分析数据有极大帮助，而对linux开发人员来说也可以在开发测试中以及平时使用中节省不少时间。本系列文中将介绍这些工具来实现文本过滤分析。

    常用的grep选项有：
-c  只输出匹配行的计数。
-i  不区分大小写（只适用于单字符） 。
-h  查询多文件时不显示文件名。
-l  查询多文件时只输出包含匹配字符的文件名。
-n  显示匹配行及行号。
-s  不显示不存在或无匹配文本的错误信息。
-v  显示不包含匹配文本的所有行。
    本节文章大数示例均使用文件/etc/passwd来作为过滤对象。
一、匹配行
最简单（也是最常用）的用法是在一个文件（或多个文件）中查找某一字符串，比如在文件/etc/passwd中查找包含字符串”user”的行：

    # grep "user" /etc/passwd  
    usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin  
    oprofile:x:16:16:Special user account to be used by OProfile:/var/lib/oprofile:/sbin/nologin  
    qemu:x:107:107:qemu user:/:/sbin/nologin  
    radvd:x:75:75:radvd user:/:/sbin/nologin  
    tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin  
    saslauth:x:994:76:"Saslauthd user":/run/saslauthd:/sbin/nologin  
    rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin  
    nm-openconnect:x:992:991:NetworkManager user for OpenConnect:/:/sbin/nologin  
    #  

一般我们将要查找的字符串用双引号包含起来，一是以防被误解为 s h e l l命令，二是可以用来查找多个单词组成的字符串。
使用-c选项输出匹配行数：

    # grep -c "user" /etc/passwd  
    8  
    #  

使用-n选项输出匹配行及行号：

    # grep -n "user" /etc/passwd  
    18:usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin  
    19:oprofile:x:16:16:Special user account to be used by OProfile:/var/lib/oprofile:/sbin/nologin  
    22:qemu:x:107:107:qemu user:/:/sbin/nologin  
    25:radvd:x:75:75:radvd user:/:/sbin/nologin  
    27:tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin  
    30:saslauth:x:994:76:"Saslauthd user":/run/saslauthd:/sbin/nologin  
    34:rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin  
    38:nm-openconnect:x:992:991:NetworkManager user for OpenConnect:/:/sbin/nologin  
    #  

其中第一列输出行号，后面输出行内容。
我们发现上面匹配“user”的行有的返回的是包含“rpcuser”和“trousers“的行，如果我们要精确地抽取“user”的行，可以这样用：

    # grep -n "\<user\>" /etc/passwd  
    18:usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin  
    19:oprofile:x:16:16:Special user account to be used by OProfile:/var/lib/oprofile:/sbin/nologin  
    22:qemu:x:107:107:qemu user:/:/sbin/nologin  
    25:radvd:x:75:75:radvd user:/:/sbin/nologin  
    30:saslauth:x:994:76:"Saslauthd user":/run/saslauthd:/sbin/nologin  
    38:nm-openconnect:x:992:991:NetworkManager user for OpenConnect:/:/sbin/nologin  
    #  

如果要忽略大小写的话可以使用-i选项，如下：

    [root@localhost shell_text_filter]# grep -ni "\<user\>" /etc/passwd  
    12:ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin  
    17:polkitd:x:999:999:User for polkitd:/:/sbin/nologin  
    18:usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin  
    19:oprofile:x:16:16:Special user account to be used by OProfile:/var/lib/oprofile:/sbin/nologin  
    20:colord:x:998:998:User for colord:/var/lib/colord:/sbin/nologin  
    22:qemu:x:107:107:qemu user:/:/sbin/nologin  
    25:radvd:x:75:75:radvd user:/:/sbin/nologin  
    30:saslauth:x:994:76:"Saslauthd user":/run/saslauthd:/sbin/nologin  
    34:rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin  
    35:nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin  
    38:nm-openconnect:x:992:991:NetworkManager user for OpenConnect:/:/sbin/nologin  
       

使用选项-v可以过滤不含指定字符串的行：

    # grep -v "a" /etc/passwd    
    bin:x:1:1:bin:/bin:/sbin/nologin  
    sync:x:5:0:sync:/sbin:/bin/sync  
    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown  
    nobody:x:99:99:Nobody:/:/sbin/nologin  
    polkitd:x:999:999:User for polkitd:/:/sbin/nologin  
    usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin  
    unbound:x:997:997:Unbound DNS resolver:/etc/unbound:/sbin/nologin  
    qemu:x:107:107:qemu user:/:/sbin/nologin  
    openvpn:x:996:995:OpenVPN:/etc/openvpn:/sbin/nologin  
    tcpdump:x:72:72::/:/sbin/nologin  
    #  

上面列出的行都不包含”a”。
结合使用ps命令可以查找当前系统是否正在运行我们需要的程序，命令如下：

    # ps x | grep vsftpd  
    1020 ?      Ss    0:00 /usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf  
    10264 pts/1    S+    0:00 grep --color=auto vsftpd  
    #  

但是发现打印结果包含当前shell进程，我们可以通过使用-v选项来过滤输出结果，如
